---
import { getRelativeLocaleUrl } from 'astro:i18n';
// import { type CollectionEntry, getCollection } from 'astro:content';

import BaseLayout from '../../layouts/BaseLayout.astro';

import ContactCTA from '../../components/ContactCTA.astro';
import Hero from '../../components/Hero.astro';
import Icon from '../../components/Icon.astro';
import Pill from '../../components/Pill.astro';

import { contentfulClient } from "../../lib/contentful";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import type { BlogPost } from "../../lib/contentful";
import { BLOCKS, MARKS } from '@contentful/rich-text-types';

export async function getStaticPaths() {
  const entries = await contentfulClient.getEntries<BlogPost>({
    content_type: "blogPost",
  });

  const options = {
  renderNode: {
    [BLOCKS.TABLE]: (node, next) => (
      `<div class="relative overflow-x-auto shadow-md sm:rounded-lg">
	  <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">${next(node.content)}</table>
	  </div>
	  `
    ),
	[BLOCKS.TABLE_HEADER_CELL]: (node, next) => (
	  `<th scope="col" class="px-6 py-3">${next(node.content)}</th>`
	),
	[BLOCKS.TABLE_ROW]: (node, next) => (
      `<tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">${next(node.content)}</tr>`
    ),
    [BLOCKS.TABLE_CELL]: (node, next) => (
      `<td class="px-6 py-4">${next(node.content)}</td>`
    ),
  },
};

  const pages = entries.items.map((item) => ({
    params: { slug: item.fields.slug },
    props: {
      title: item.fields.title,
      content: documentToHtmlString(item.fields.content,options),
      date: new Date(item.fields.date).toLocaleDateString(),
	  description: item.fields.description,
	  slug: item.fields.slug,
	  tags: item.metadata.tags
    },
  }));
  return pages;
}
const { title, content, date, description, slug, tags } = Astro.props;
---

<BaseLayout title={title} description={description}>
	<div class="stack gap-20">
		<div class="stack gap-15">
			<header>
				<div class="wrapper stack gap-2">
					<a class="back-link" href="/blog/"><Icon icon="arrow-left" /> Blog</a>
					<Hero title={title} align="start">
						<div class="details">
							<div class="tags">
								{tags.map((t) => <Pill>{t.sys.id}</Pill>)}
							</div>
							<p class="description">{description}</p>
						</div>
					</Hero>
				</div>
			</header>
			<main class="wrapper">
				<div class="stack gap-10">
					<div class="content">
						<article class="space-y-4" set:html={content}/>
					</div>
				</div>				  
			</main>
			
		</div>
		<ContactCTA />
	</div>
</BaseLayout>

<style>
	header {
		padding-bottom: 2.5rem;
		border-bottom: 1px solid var(--gray-800);
	}

	.back-link {
		display: none;
	}

	.details {
		display: flex;
		flex-direction: column;
		padding: 0.5rem;
		gap: 1.5rem;
		justify-content: space-between;
		align-items: center;
	}

	.tags {
		display: flex;
		gap: 0.5rem;
	}

	.description {
		font-size: var(--text-lg);
		max-width: 54ch;
	}

	.content {
		max-width: 65ch;
		margin-inline: auto;
	}

	.content > :global(* + *) {
		margin-top: 1rem;
	}

	.content :global(h1),
	.content :global(h2),
	.content :global(h3),
	.content :global(h4),
	.content :global(h5) {
		margin: 1.5rem 0;
	}

	.content :global(img) {
		border-radius: 1.5rem;
		box-shadow: var(--shadow-sm);
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
	}

	.content :global(blockquote) {
		font-size: var(--text-lg);
		font-family: var(--font-brand);
		font-weight: 600;
		line-height: 1.1;
		padding-inline-start: 1.5rem;
		border-inline-start: 0.25rem solid var(--accent-dark);
		color: var(--gray-0);
	}

	.back-link,
	.content :global(a) {
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
	}

	.back-link:hover,
	.back-link:focus,
	.content :global(a:hover),
	.content :global(a:focus) {
		text-decoration-color: currentColor;
	}

	@media (min-width: 50em) {
		.back-link {
			display: block;
			align-self: flex-start;
		}

		.details {
			flex-direction: row;
			gap: 2.5rem;
		}

		.content :global(blockquote) {
			font-size: var(--text-2xl);
		}
	}
</style>
